// eslint-disable-next-line no-unused-vars
import React, {useRef, useState} from 'react'
import './Quiz.css'
import {data} from '../../assets/data.js'

const Quiz = () => {

    let [index, setIndex] = useState(0);
    let [question, setQuestion] = useState(data[index]);
    let [lock, setLock] = useState(false);
    let [score, setScore] = useState(0);
    let [result, setResult] = useState(false)

    let options1 = useRef(null);
    let options2 = useRef(null);
    let options3 = useRef(null);
    let options4 = useRef(null);

    let option_array = [options1, options2, options3, options4];

    const checkAns = (e, ans) => {
        if (lock === false) {
            if (question.ans === ans) {
                e.target.classList.add("firstChoice")
                setLock(true)
                setScore(prev => prev + 1)
            } else {
                e.target.classList.add("wrong")
                setLock(true)
                option_array[question.ans - 1].current.classList.add("correct")
            }
        }

    }

    const checkAns1 = (e, ans) => {
        if (lock === false) {
            switch (question.ans) {
                case 'firstChoice':
                    setLock(true)
                    setScore(prev => prev + 1)
                    break;
                case 'secondChoice':
                    setLock(true)
                    setScore(prev => prev + 1)
                    break;
                case 'thirdChoice':
                    setLock(true)
                    setScore(prev => prev + 1)
                    break;
                case 'fourthChoice':
                    setLock(true)
                    setScore(prev => prev + 1)
                    break;
                case 'fifthChoice':
                    setLock(true)
                    setScore(prev => prev + 1)
                    break;
            }
        }

    }

    const next = () => {
        if (lock === true) {
            if (index === data.length - 1) {
                setResult(true);
                return 0;
            }
            setIndex(++index);
            setQuestion(data[index]);
            setLock(false);
            option_array.map((option) => {
                option.current.classList.remove("correct")
                option.current.classList.remove("wrong")
                return null;
            })
        }
    }

    const reset = () => {
        setIndex(0);
        setQuestion(data[0]);
        setScore(0);
        setLock(false);
        setResult(false);
    }

    return (
    <div className='container w-4/5 mx-auto text-black flex flex-col space-y-8 p-4 mt-6'>
        <h1 className='text-3xl font-bold'>Quiz App</h1>
        <hr className='h-0.5 bg-gray-500 border-none'/>
        {
            result ? <></> : <>
                <h2 className='text-2xl font-semibold mb-4'>{index + 1}. {question.question}</h2>
                <ul className='space-y-4'>
                    <li ref={options1} onClick={(e) => {
                        checkAns(e, 1)
                    }} className='flex items-center h-16 pl-6 border border-gray-600 rounded-lg text-lg cursor-pointer hover:bg-gray-200'>{question.option1}</li>
                    <li ref={options2} onClick={(e) => {
                        checkAns(e, 2)
                    }} className='flex items-center h-16 pl-6 border border-gray-600 rounded-lg text-lg cursor-pointer hover:bg-gray-200'>{question.option2}</li>
                    <li ref={options3} onClick={(e) => {
                        checkAns(e, 3)
                    }} className='flex items-center h-16 pl-6 border border-gray-600 rounded-lg text-lg cursor-pointer hover:bg-gray-200'>{question.option3}</li>
                    <li ref={options4} onClick={(e) => {
                        checkAns(e, 4)
                    }} className='flex items-center h-16 pl-6 border border-gray-600 rounded-lg text-lg cursor-pointer hover:bg-gray-200'>{question.option4}</li>
                </ul>
                <button onClick={next} className='mx-auto w-64 h-16 bg-purple-700 text-white text-2xl font-bold rounded-lg cursor-pointer hover:bg-purple-800'>Next</button>
                <div className='mx-auto text-lg font-medium'>{index + 1} of {data.length} questions</div>
            </>
        }
        {
            result ? <>
                <h2 className='text-2xl font-semibold'>Your Score {score} out of {data.length}</h2>
                <button onClick={reset} className='mx-auto w-64 h-16 bg-purple-700 text-white text-2xl font-bold rounded-lg cursor-pointer hover:bg-purple-800'>Reset</button>
            </> : <></>
        }
    </div>
)
}

export default Quiz